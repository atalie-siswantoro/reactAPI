[{"D:\\RPL\\frontendapi\\src\\index.js":"1","D:\\RPL\\frontendapi\\src\\reportWebVitals.js":"2","D:\\RPL\\frontendapi\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":7461,"mtime":1607595208901,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1gj8wii",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"16"},"D:\\RPL\\frontendapi\\src\\index.js",[],["17","18"],"D:\\RPL\\frontendapi\\src\\reportWebVitals.js",[],"D:\\RPL\\frontendapi\\src\\App.js",["19","20","21","22","23","24","25","26"],"import React, {Component} from 'react';\nimport axios from 'axios';\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\"\nimport BMI from './Studi_kasusModul3/BMI';\nimport Cicilan from './Studi_kasusModul3/Cicilan';\nimport Jualbeli from './Studi_kasusModul3/Jualbeli';\nimport KonversiBilangan from './Studi_kasusModul3/KonversiBilangan';\nconst $ = window.jQuery\n\nclass Pegawai extends Component {\n    constructor() {\n        super();\n        this.state = {\n          pegawai: [], // array pegawai untuk menampung data pegawai\n          nip: \"\",\n          nama: \"\",\n          alamat: \"\",\n          action: \"\",\n          search: \"\",\n        }\n    }\n\n    bind = (event) => {\n      this.setState({[event.target.name]: event.target.value});\n    }\n  \n    Add = () => {\n      // mengosongkan isi variabel nip, nama, dan alamat\n      // set action menjadi \"insert\"\n      this.setState({\n        nip: \"\",\n        nama: \"\",\n        alamat: \"\",\n        action: \"insert\"\n      });\n    }\n  \n    Edit = (item) => {\n      /*\n      - mengisikan isi variabel nip, nama, alamat sesuai dengan data yang\n      akan diedit\n      - set action menjadi \"update\"\n      */\n      this.setState({\n        nip: item.nip,\n        nama: item.nama,\n        alamat: item.alamat,\n        action: \"update\"\n      });\n    }\n  \n    getPegawai = () => {\n      let url = \"http://localhost:2910/pegawai\";\n      // mengakses api untuk mengambil data pegawai\n      axios.get(url)\n      .then(response => {\n        // mengisikan data dari respon API ke array pegawai\n        this.setState({pegawai: response.data.pegawai});\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    }\n  \n    findPegawai = (event) => {\n      let url = \"http://localhost:2910/pegawai\";\n      if (event.keyCode === 13) {\n        // menampung data keyword pencarian\n        let form = {\n          find: this.state.search\n        }\n        // mengakses api untuk mengambil data pegawai\n        // berdasarkan keyword\n        axios.post(url, form)\n        .then(response => {\n          // mengisikan data dari respon API ke array pegawai\n          this.setState({pegawai: response.data.pegawai});\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }\n    }\n  \n    SavePegawai = (event) => {\n      event.preventDefault();\n      /* menampung data nip, nama dan alamat dari Form\n      ke dalam FormData() untuk dikirim  */\n      let url = \"\";\n      if (this.state.action === \"insert\") {\n        url = \"http://localhost:2910/pegawai/save\"\n      } else {\n        url = \"http://localhost:2910/pegawai/update\"\n      }\n      \n      let form = {\n        nip: this.state.nip,\n        nama: this.state.nama,\n        alamat: this.state.alamat\n      }\n  \n      // mengirim data ke API untuk disimpan pada database\n      axios.post(url, form)\n      .then(response => {\n        // jika proses simpan berhasil, memanggil data yang terbaru\n        this.getPegawai();\n      })\n      .catch(error => {\n        console.log(error);\n      });\n      // menutup form modal\n      $(\"#modal\").modal('hide');\n    }\n  \n    Drop = (nip) => {\n      let url = \"http://localhost:2910/pegawai/\" + nip;\n      // memanggil url API untuk menghapus data pada database\n      if (window.confirm('Apakah Anda yakin ingin menghapus data ini?')) {\n        axios.delete(url)\n        .then(response => {\n          // jika proses hapus data berhasil, memanggil data yang terbaru\n          this.getPegawai();\n        })\n        .catch(error => {\n          console.log(error);\n        });\n      }\n    }\n  \n    componentDidMount(){\n      // method yang pertama kali dipanggil pada saat load page\n      this.getPegawai()\n    }  \n\n    render() {\n        return (\n\n          // <Router>\n          //   <div>\n          //     <nav>\n          //       <ul>\n          //         <li>\n          //           <Link to=\"/BMI\" className=\"nav-link\">BMI</Link>\n          //           <Link to=\"/Cicilan\" className=\"nav-link\">Cicilan Bank</Link>\n          //           <Link to=\"/Jualbeli\" className=\"nav-link\">Jualbeli</Link>\n          //           <Link to=\"/Konversi\" className=\"nav-link\">Konversi Bilangan</Link>\n          //         </li>\n          //       </ul>\n          //     </nav>\n          //     <Switch>\n          //       <Route path=\"/BMI\">\n          //         <BMI />\n          //       </Route>\n          //       <Route path=\"/Cicilan\">\n          //         <Cicilan />\n          //       </Route>\n          //       <Route path=\"/Jualbeli\">\n          //         <Jualbeli />\n          //       </Route>\n          //       <Route path=\"/Konversi\">\n          //         <KonversiBilangan />\n          //       </Route>\n          //     </Switch>\n          //   </div>\n          // </Router>\n\n          <div className=\"m-3 card\">\n            <div className=\"card-header bg-info text-white\">Data Pegawai</div>\n            <div className=\"card-body\">\n              <input type=\"text\" className=\"form-control mb-2\" name=\"search\" value={this.state.search} onChange={this.bind} onKeyUp={this.findPegawai} placeholder=\"Pencarian...\"/>\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th>NIP</th>\n                      <th>Nama</th>\n                      <th>Alamat</th>\n                      <th>Option</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.pegawai.map((item,index) => {\n                      return (\n                        <tr key={index}>\n                          <td>{item.nip}</td>\n                          <td>{item.nama}</td>\n                          <td>{item.alamat}</td>\n                          <td>\n                            <button className=\"btn btn-sm btn-info m-1\" data-toggle=\"modal\" data-target=\"#modal\" onClick={() => this.Edit(item)}>Edit</button>\n                            <button className=\"btn btn-sm btn-danger m-1\" onClick={() => this.Drop(item.nip)}>Hapus</button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n                <button className=\"btn btn-success\" onClick={this.Add} data-toggle=\"modal\" data-target=\"#modal\">Tambah Data</button>\n                <div className=\"modal fade\" id=\"modal\">\n                  <div className=\"modal-content\">\n                    <div className=\"modal-header\">Form Pegawai</div>\n                    <form onSubmit={this.SavePegawai}>\n                      <div className=\"modal-body\">\n                        NIP\n                        <input type=\"number\" name=\"nip\" value={this.state.nip} onChange={this.bind} className=\"form-control\" required />\n                        Nama\n                        <input type=\"text\" name=\"nama\" value={this.state.nama} onChange={this.bind}  className=\"form-control\" required />\n                        Alamat\n                        <input type=\"text\" name=\"alamat\" value={this.state.alamat} onChange={this.bind} className=\"form-control\" required />\n                      </div>\n                      <div className=\"modal-footer\">  \n\t                      <button className=\"btn btn-sm btn-success\" type=\"submit\">Simpan</button>  \n\t                    </div>\n                    </form>    \n                  </div>  \n                </div>    \n            </div>  \n          </div>\n        );\n    }\n}\nexport default Pegawai;\n",["27","28"],{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":3,"column":26,"nodeType":"35","messageId":"36","endLine":3,"endColumn":32},{"ruleId":"33","severity":1,"message":"37","line":3,"column":34,"nodeType":"35","messageId":"36","endLine":3,"endColumn":40},{"ruleId":"33","severity":1,"message":"38","line":3,"column":42,"nodeType":"35","messageId":"36","endLine":3,"endColumn":47},{"ruleId":"33","severity":1,"message":"39","line":3,"column":49,"nodeType":"35","messageId":"36","endLine":3,"endColumn":53},{"ruleId":"33","severity":1,"message":"40","line":4,"column":8,"nodeType":"35","messageId":"36","endLine":4,"endColumn":11},{"ruleId":"33","severity":1,"message":"41","line":5,"column":8,"nodeType":"35","messageId":"36","endLine":5,"endColumn":15},{"ruleId":"33","severity":1,"message":"42","line":6,"column":8,"nodeType":"35","messageId":"36","endLine":6,"endColumn":16},{"ruleId":"33","severity":1,"message":"43","line":7,"column":8,"nodeType":"35","messageId":"36","endLine":7,"endColumn":24},{"ruleId":"29","replacedBy":"44"},{"ruleId":"31","replacedBy":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'BMI' is defined but never used.","'Cicilan' is defined but never used.","'Jualbeli' is defined but never used.","'KonversiBilangan' is defined but never used.",["46"],["47"],"no-global-assign","no-unsafe-negation"]